{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.Secret": {
      "name": "Secret",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "secret_code": {
          "name": "secret_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "nemesis_id": {
          "name": "nemesis_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "Secret_nemesis_id_key": {
          "name": "Secret_nemesis_id_key",
          "columns": [
            {
              "expression": "nemesis_id",
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "Secret_secret_code_key": {
          "name": "Secret_secret_code_key",
          "columns": [
            {
              "expression": "secret_code",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Secret_nemesis_id_fkey": {
          "name": "Secret_nemesis_id_fkey",
          "tableFrom": "Secret",
          "tableTo": "Nemesis",
          "schemaTo": "public",
          "columnsFrom": [
            "nemesis_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Nemesis": {
      "name": "Nemesis",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "is_alive": {
          "name": "is_alive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "character_id": {
          "name": "character_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Nemesis_name_key": {
          "name": "Nemesis_name_key",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "Nemesis_character_id_fkey": {
          "name": "Nemesis_character_id_fkey",
          "tableFrom": "Nemesis",
          "tableTo": "Character",
          "schemaTo": "public",
          "columnsFrom": [
            "character_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.Character": {
      "name": "Character",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "gender": {
          "name": "gender",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ability": {
          "name": "ability",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "weight": {
          "name": "weight",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "born": {
          "name": "born",
          "type": "timestamp(3)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "Character_name_key": {
          "name": "Character_name_key",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.pg_stat_statements_info": {
      "name": "pg_stat_statements_info",
      "schema": "public",
      "columns": {
        "dealloc": {
          "name": "dealloc",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "stats_reset": {
          "name": "stats_reset",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT pg_stat_statements_info.dealloc, pg_stat_statements_info.stats_reset FROM pg_stat_statements_info() pg_stat_statements_info(dealloc, stats_reset)",
      "materialized": false
    },
    "public.pg_stat_statements": {
      "name": "pg_stat_statements",
      "schema": "public",
      "columns": {
        "userid": {
          "name": "userid",
          "type": "oid",
          "primaryKey": false,
          "notNull": false
        },
        "dbid": {
          "name": "dbid",
          "type": "oid",
          "primaryKey": false,
          "notNull": false
        },
        "toplevel": {
          "name": "toplevel",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "queryid": {
          "name": "queryid",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "query": {
          "name": "query",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "plans": {
          "name": "plans",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "total_plan_time": {
          "name": "total_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "min_plan_time": {
          "name": "min_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "max_plan_time": {
          "name": "max_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "mean_plan_time": {
          "name": "mean_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "stddev_plan_time": {
          "name": "stddev_plan_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "calls": {
          "name": "calls",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "total_exec_time": {
          "name": "total_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "min_exec_time": {
          "name": "min_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "max_exec_time": {
          "name": "max_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "mean_exec_time": {
          "name": "mean_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "stddev_exec_time": {
          "name": "stddev_exec_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "rows": {
          "name": "rows",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_hit": {
          "name": "shared_blks_hit",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_read": {
          "name": "shared_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_dirtied": {
          "name": "shared_blks_dirtied",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "shared_blks_written": {
          "name": "shared_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_hit": {
          "name": "local_blks_hit",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_read": {
          "name": "local_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_dirtied": {
          "name": "local_blks_dirtied",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "local_blks_written": {
          "name": "local_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blks_read": {
          "name": "temp_blks_read",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "temp_blks_written": {
          "name": "temp_blks_written",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "blk_read_time": {
          "name": "blk_read_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "blk_write_time": {
          "name": "blk_write_time",
          "type": "double precision",
          "primaryKey": false,
          "notNull": false
        },
        "wal_records": {
          "name": "wal_records",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "wal_fpi": {
          "name": "wal_fpi",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "wal_bytes": {
          "name": "wal_bytes",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT pg_stat_statements.userid, pg_stat_statements.dbid, pg_stat_statements.toplevel, pg_stat_statements.queryid, pg_stat_statements.query, pg_stat_statements.plans, pg_stat_statements.total_plan_time, pg_stat_statements.min_plan_time, pg_stat_statements.max_plan_time, pg_stat_statements.mean_plan_time, pg_stat_statements.stddev_plan_time, pg_stat_statements.calls, pg_stat_statements.total_exec_time, pg_stat_statements.min_exec_time, pg_stat_statements.max_exec_time, pg_stat_statements.mean_exec_time, pg_stat_statements.stddev_exec_time, pg_stat_statements.rows, pg_stat_statements.shared_blks_hit, pg_stat_statements.shared_blks_read, pg_stat_statements.shared_blks_dirtied, pg_stat_statements.shared_blks_written, pg_stat_statements.local_blks_hit, pg_stat_statements.local_blks_read, pg_stat_statements.local_blks_dirtied, pg_stat_statements.local_blks_written, pg_stat_statements.temp_blks_read, pg_stat_statements.temp_blks_written, pg_stat_statements.blk_read_time, pg_stat_statements.blk_write_time, pg_stat_statements.wal_records, pg_stat_statements.wal_fpi, pg_stat_statements.wal_bytes FROM pg_stat_statements(true) pg_stat_statements(userid, dbid, toplevel, queryid, query, plans, total_plan_time, min_plan_time, max_plan_time, mean_plan_time, stddev_plan_time, calls, total_exec_time, min_exec_time, max_exec_time, mean_exec_time, stddev_exec_time, rows, shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written, temp_blks_read, temp_blks_written, blk_read_time, blk_write_time, wal_records, wal_fpi, wal_bytes)",
      "materialized": false
    }
  },
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {}
  }
}